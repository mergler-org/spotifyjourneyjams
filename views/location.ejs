<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Spotify Journey Jams</title>
    <link href="./output.css" rel="stylesheet" />
  </head>

  <body class="h-fit bg-no-repeat bg-[radial-gradient(ellipse_at_top_right,_var(--tw-gradient-stops))] from-teal-400 via-amber-200 to-violet-600">
    <div class="flex items-center justify-center m-10">
      <img src="static/spotifyjourneyjamslogo.png" class=" " />
    </div>
    <div class="flex items-center justify-center">
      <div
        class="flex h-5/6 max-h-[35rem] min-h-[500px] w-5/6 rounded-2xl bg-slate-100 shadow-lg mb-5"
      >
        <div class="h-auto w-32 flex-col rounded-l-2xl bg-gray-800">
          <div
            id="clock"
            class="m-5 text-center font-semibold text-white"
          ></div>
        </div>
        <div class="flex-1">
          <div class="w-full">
            <form
              id="inputs"
              class="m-10 flex flex-col rounded-lg bg-gray-700 p-4"
            >
              <input
                type="text"
                id="startingPoint"
                name="startingPoint"
                placeholder="Where are you?"
                class="w-full rounded-md bg-gray-600 p-2 text-white"
                required
              />
              <div class="m-4 flex justify-center">
                <p id="swapButton" class="text-4xl text-white">â†•</p>
              </div>
              <input
                type="text"
                id="destination"
                name="destination"
                placeholder="Where are you going?"
                class="w-full rounded-md bg-gray-600 p-2 text-white"
                required
              />
              <button
                id="submit"
                type="button"
                onclick="submitForm()"
                class="m-5 w-full cursor-pointer border-y border-gray-600 p-2 text-xl text-blue-400 hover:text-blue-200"
              >
                Submit
              </button>
            </form>
          </div>
          <div class="w-full">
            <div
              id="result"
              class="invisible m-10 flex flex-col rounded-lg bg-gray-700 p-4"
            ></div>
          </div>
        </div>
      </div>
    </div>
    <script>
      let initialStartingPoint;
      let initialDestination;
      document
        .getElementById("swapButton")
        .addEventListener("click", function () {
          var startingPointInput = document.getElementById("startingPoint");
          var destinationInput = document.getElementById("destination");
          var tempValue = startingPointInput.value;
          startingPointInput.value = destinationInput.value;
          destinationInput.value = tempValue;
        });
      async function submitForm() {
        const startingPoint = document.getElementById("startingPoint").value;
        const destination = document.getElementById("destination").value;
        if (!startingPoint || !destination) {
          return;
        }
        if (
          startingPoint == initialStartingPoint &&
          destination == initialDestination
        ) {
          return;
        }
        const response = await fetch("/geocoding", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ startingPoint, destination }),
        });
        if (response.ok) {
          const data = await response.json();
          updateResult(data);
        } else {
          console.error("Error submitting form:", response.statusText);
        }
      }
      function updateResult(data) {
        const resultContainer = document.getElementById("result");
        // Display geocode and distance data
        resultContainer.innerHTML = `
        <h2 class="m-3 font-bold text-white">Duration: ${data.duration}</h2>
        <h3 class="m-3 font-bold text-white">Distance: ${data.distance} miles</h3>
        <a class="mt-auto w-full cursor-pointer border-y border-gray-600 p-2 text-center text-xl text-green-400 hover:text-green-200" href="/music"> Pick Music </a>
        `;
        const startingPointInput = document.getElementById("startingPoint");
        const destinationInput = document.getElementById("destination");
        startingPointInput.value = data.startingPointData;
        destinationInput.value = data.destinationData;
        initialStartingPoint = data.startingPointData;
        initialDestination = data.destinationData;
        resultContainer.classList.remove("invisible");
      }

      document
        .getElementById("location")
        .addEventListener("click", function () {
          console.log("ya dawg");
          navigator.geolocation.getCurrentPosition(
            function (position) {
              console.log(position.coords);
              var startingPointInput = document.getElementById("startingPoint");
              startingPointInput.value = position.coords.longitude+','+position.coords.latitude;
            },
            function (error) {
              // handle the error
            }
          );
        });

      function updateClock() {
        var now = new Date();
        var hours = now.getHours();
        var minutes = now.getMinutes();
        var seconds = now.getSeconds();

        // Add leading zeros if needed
        hours = (hours < 10 ? "0" : "") + hours;
        minutes = (minutes < 10 ? "0" : "") + minutes;

        // Format the time as HH:MM:SS
        var timeString = hours + ":" + minutes;

        // Update the clock element
        document.getElementById("clock").innerHTML = timeString;
      }

      // Update the clock every second
      setInterval(updateClock, 10000);

      // Initial call to display the clock immediately
      updateClock();
    </script>
  </body>
</html>
